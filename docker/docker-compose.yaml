version: '3.8'

services:
  export:
    container_name: deployer
    image: deployer
    environment:
      - DISPLAY=host.docker.internal:0.0
      - NVIDIA_DRIVER_CAPABILITIES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility,graphics
    command: tail -f /dev/null
    stdin_open: true
    tty: true
    build:
      context: ..
      dockerfile: docker/deploy.Dockerfile
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              device_ids:
                - "0"
              capabilities: [gpu]
    volumes:
      - "../deployment/weights:/app/deployment/weights"
      - "../deployment/custom:/app/deployment/custom"
  triton:
    container_name: triton
    image: nvcr.io/nvidia/tritonserver:25.05-py3
    ports:
      - 8000:8000
      - 8001:8001
      - 8002:8002
    restart: always
    volumes:
      - "${PWD}/../triton/models:/models"
    command: [ "tritonserver", "--model-store=/models", "--exit-on-error=false", "--model-control-mode=poll" ]
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [ gpu ]
              count: 1
  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    ports:
      - 9090:9090
    volumes:
      - "${PWD}/../prometheus.yml:/etc/prometheus/prometheus.yml"
    restart: always
  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    ports:
      - 3000:3000
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    restart: always
